


03-26-2023 - ArrayList vs LinkedList vs Vector


Arrays vs ArrayList
Similarities:
	-Both are collections used to store multiple data.
	-Both allows duplicate elements.
	-Both allows null data when they store objects.
	-They both imported from java.util package.


Differences:
	-Both can store objects but arrays can also store primitives.
	-Arrays are fixed-sized while ArrayList is dynamiz and size can be modified by adding.removing the elements.
	-Arrays provides index to manipulate the data while ArrayList provides methods to get, set, remove, clear, add, change the data.

SYNTAX:
arrays => 	dataType[] varName = new dataType[capacity];
			dataType[] varName = {el1,el2, null, el3};

arrayList ->ArrayList<dataType> varName = new ArrayList<>();
			List<dataType> varName = new ArrayList<>();



ArrayList methods:
1. Adding elements
	-add(Object) -> adds object to the tail
	-add(index, Object) -> adds object to specified index
	-addAll(Collection) -> adds one collection to another
	-addAll(index, Collection) -> adds one collection to another with specified index


2. Retrieving elements
	get(index) -> retrieves element by it's index

3. Updating elements
	set(index, Object) -> updates the element by the index with the new Object

4. Getting the size
	size() -> how many elements you have in the list

5. Removing elements
	-remove(index) -> removes the element by the index
	-remove(Object) -> removes the given element (first occurrence)
	-removeAll(Collection) -> removes multiple elements at once
	-removeIf() -> removes elements that meets the condition
	-clear() -> removes all the element in the list
	-retainAll(Collection) -> keeps the collection element and removes the rest from the original list

6. Checking indexes
	-indexOf(Object) -> the first index found for the element
	-lastIndexOf(Object) -> the last index found for the element

7. Checking list if it contains some elements
	-contains(Object) -> checks the list if it contains single element
	-containsAll(Collection) -> checks the list if it contains multiple elements

8. Check if the list is empty
	-isEmpty() -> checks if the is empty or not



HOW TO SORT AN ARRAYLIST?
-We can use Collections class which comes from java.util package and its sort() method

Syntax:
Collections.sort(list);





HOW TO CONVERT AN ARRAY TO AN AARAYLIST?
-We can use loop or asList() method

1. Using asList() method

String[] names = {"Okan", "Sandina", "Sabir"};

ArrayList<String> list = new ArrayList<>(Arrays.asList(names));


ArrayList<String> list = new ArrayList<>(Arrays.asList("", "", ""));

//Later versions like 11
ArrayList<Integer> list = List.of(10, 15, 5, 2, -7);











